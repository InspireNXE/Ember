// Gradle plugins
plugins {
    id "application"
    id "com.github.hierynomus.license" version "0.11.0"
    id "com.github.johnrengelman.shadow" version "1.1.2"
    id "java"
    id "maven"
    id "signing"
}

// Gradle default tasks
defaultTasks 'licenseFormat', 'clean', 'build', 'shadowJar'

// Project repositories
repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'sonatype-nexus-public'
        url = 'https://oss.sonatype.org/content/repositories/public/'
    }
}

// Project dependencies
dependencies {
    compile 'com.flowpowered:flow-cerealization:0.1.0-SNAPSHOT'
    compile 'com.flowpowered:flow-chat:0.1.0-SNAPSHOT'
    compile 'com.flowpowered:flow-commands:0.1.0-SNAPSHOT'
    compile 'com.flowpowered:flow-commons:0.1.0-SNAPSHOT'
    compile 'com.flowpowered:flow-events:0.1.0-SNAPSHOT'
    compile 'com.flowpowered:flow-plugins:0.1.0-SNAPSHOT'
    compile 'com.flowpowered:flow-math:0.1.0-SNAPSHOT'
    compile 'com.flowpowered:flow-networking:1.0.0-SNAPSHOT'
    compile 'com.flowpowered:flow-render:0.1.0-SNAPSHOT'
    compile 'com.github.wolf480pl:jline-log4j2-appender:1.0.0-SNAPSHOT'
    compile 'net.sf.jopt-simple:jopt-simple:4.6'
    compile 'org.apache.logging.log4j:log4j-api:2.0.1'
    compile 'org.apache.logging.log4j:log4j-core:2.0.1'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.0.1'
    compile 'org.spout:react:1.0.0-SNAPSHOT'
    compile 'junit:junit:4.11'
}

// Basic project information
group = 'org.obsidianbox'
archivesBaseName = 'ember'
version = '1.0.0-SNAPSHOT'
mainClassName = 'org.obsidianbox.ember.Main'
ext.inceptionYear = '2014'
ext.currentYear = '2014'
ext.packaging = 'jar'

// Extended project information
ext.projectName = 'Ember'
ext.description = 'Ember is a voxel engine, built for Java, developed as a hobby project to tackle the unique challenges associated with game development'
ext.url = 'http://obsidianbox.org'
ext.organization = 'ObsidianBox'

// Java version target/source compatibility
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// Compilation variables
ext.buildNumber = project.hasProperty("buildNumber") ? buildNumber : '0'
ext.ciSystem = project.hasProperty("ciSystem") ? ciSystem : 'unknown'
ext.commit = project.hasProperty("commit") ? commit : 'unknown'

// Include dependencies in the final JAR
shadowJar {
    classifier = ''
    destinationDir = file("build/distributions")
    exclude 'shaders/'
}

// License header formatting
import nl.javadude.gradle.plugins.license.License
tasks.withType(License).each { licenseTask ->
    licenseTask.exclude '**/*.xml'
    licenseTask.exclude '**/*.yml'
}
license {
    ext.name = project.name
    ext.organization = organization
    ext.url = url
    ext.year = inceptionYear == currentYear ? inceptionYear : inceptionYear + '-' + currentYear
    header rootProject.file('HEADER.txt')
    ignoreFailures true
    strictCheck true
}

// JAR manifest configuration
jar.manifest.mainAttributes(
        "Main-Class": mainClassName,
        "Built-By": System.properties['user.name'],
        "Created-By": System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
        "Implementation-Title": name,
        "Implementation-Version": version + "+" + ciSystem + "-b" + buildNumber + ".git-" + commit,
        "Implementation-Vendor": url)
